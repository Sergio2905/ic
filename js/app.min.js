/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   burgerClose: () => (/* binding */ burgerClose),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const burger = () => {
    const menuIcon = document.querySelector('.header__menu-icon');
    const menuBody = document.querySelector('.menu__body');
    const body = document.querySelector('body');

    if (menuIcon) {
        menuIcon.addEventListener("click", function () {
            body.classList.toggle('_lock');
            menuIcon.classList.toggle('_active');
            menuBody.classList.toggle('_active');
        })
    }
}

const burgerClose = () => {
    const menuIcon = document.querySelector('.header__menu-icon');
    const menuBody = document.querySelector('.menu__body');
    const body = document.querySelector('body');

    if (menuIcon.classList.contains('_active')) {
        body.classList.remove('_lock');
        menuIcon.classList.remove('_active');
        menuBody.classList.remove('_active');
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (burger);

/***/ }),
/* 2 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const appHeight = () => {
    const doc = document.documentElement;
    doc.style.setProperty('--app-height', `${window.innerHeight}px`);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (appHeight);

/***/ }),
/* 3 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const moveElement = () => {
    const elementsToMove = document.querySelectorAll('[data-move]');

    if (elementsToMove.length > 0) {
        for (let index = 0; index < elementsToMove.length; index++) {
            const element = elementsToMove[index];
            const elementName = element.dataset.move.split(', ')[0];
            const screenWidth = element.dataset.move.split(', ')[1];
            const firstPosition = document.querySelector(`[data-desk*=${elementName}]`);
            const lastPosition = document.querySelector(`[data-mob*=${elementName}]`);

            function move() {
                let position;
                if (window.innerWidth <= screenWidth) {
                    if (lastPosition.dataset.mob.split(', ')[1]) {
                        position = lastPosition.dataset.mob.split(', ')[1];
                    } else {
                        position = 'append';
                    }
                    moveObj(element, lastPosition, position);
                } else {
                    if (firstPosition.dataset.desk.split(', ')[1]) {
                        position = firstPosition.dataset.desk.split(', ')[1];
                    } else {
                        position = 'append';
                    }
                    moveObj(element, firstPosition, position);
                }
            }

            function moveObj($elem, $target, $position = 'append') {
                if ($position == 'after') {
                    $target.after($elem);
                } else if ($position == 'before') {
                    $target.before($elem);
                } else if ($position == 'append') {
                    $target.append($elem);
                } else if ($position == 'prepend') {
                    $target.prepend($elem);
                }
            }

            move();

            window.addEventListener('resize', function () {
                move();
            });
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (moveElement);

/***/ }),
/* 4 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const lazy = () => {
    const lazyBlocks = document.querySelectorAll('.lazy');

    const imageObserver = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const target = entry.target;
                showImages(target);
                observer.unobserve(target);
            }
        });
    }, {
        threshold: 0,
        rootMargin: "500px",
    });

    lazyBlocks.forEach(lazyBlock => {
        imageObserver.observe(lazyBlock);
    });

    const showImages = (target) => {
        const images = target.querySelectorAll('img[data-src], source[data-srcset]');

        if (images.length) {
            images.forEach((image) => {
                if (image.dataset.src) {
                    image.setAttribute('src', image.dataset.src);
                    image.removeAttribute('data-src');
                }
                if (image.dataset.srcset) {
                    image.setAttribute('srcset', image.dataset.srcset);
                    image.removeAttribute('data-srcset');
                }
            });
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (lazy);

/***/ }),
/* 5 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   selectClose: () => (/* binding */ selectClose)
/* harmony export */ });
const select = () => {

    const selectBoxes = document.querySelectorAll('.select');

    if (selectBoxes.length > 0) {
        for (let index = 0; index < selectBoxes.length; index++) {
            const selectBox = selectBoxes[index];
            const selected = selectBox.querySelector('.select__checked');
            const optionsContainer = selectBox.querySelector('.select__container');
            const optionsList = selectBox.querySelectorAll('.select__option');

            selected.addEventListener('click', () => {
                if (!optionsContainer.classList.contains('_active')) {
                    selectBoxes.forEach((el) => {
                        el.querySelector('.select__container').classList.remove('_active');
                        el.querySelector('.select__checked').classList.remove('_active');
                    });
                }
                optionsContainer.classList.toggle('_active');
                if (optionsContainer.classList.contains('_active')) {
                    selected.classList.add('_active');
                } else {
                    selected.classList.remove('_active');
                }
            });

            optionsList.forEach(o => {
                o.addEventListener('click', (e) => {
                    const input = selectBox.querySelector('input');
                    selected.innerHTML = o.innerHTML;
                    input.value = o.innerHTML;
                    optionsContainer.classList.remove('_active');
                    selected.classList.remove('_active');
                });
            });

        }
    }
}

const selectClose = () => {
    const selectContainers = document.querySelectorAll('.select__container');
    const selectCheckedItems = document.querySelectorAll('.select__checked');

    if (selectContainers.length) {
        selectContainers.forEach((selectContainer) => {
            selectContainer.classList.remove('_active');
        });
    }

    selectCheckedItems.forEach((selectCheckedItem) => {
        selectCheckedItem.classList.remove('_active');
    });

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (select);

/***/ }),
/* 6 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   modalClose: () => (/* binding */ modalClose)
/* harmony export */ });
const modal = (btn, e) => {
    const body = document.querySelector('body');
    const lockPaddingValue = window.innerWidth - document.querySelector('.wrapper').offsetWidth + 'px';
    const popupName = btn.dataset.modal;
    const currentPopup = document.getElementById(popupName);

    const activePopup = btn.closest('.modal');

    if (activePopup) {
        activePopup.classList.remove('_active');
    }

    currentPopup.classList.add('_active');
    body.classList.add('_lock');
    body.style.paddingRight = lockPaddingValue;

    e.preventDefault();
    hideMenu();
}

const modalClose = () => {
    const body = document.querySelector('body');
    const modals = document.querySelectorAll('.modal');
    const timeout = 800;

    setTimeout(function () {
        body.classList.remove('_lock');
        body.style.paddingRight = '0px';
    }, timeout);

    if (modals.length) {
        modals.forEach((modal) => {
            modal.classList.remove('_active');
        });
    }
}

const hideMenu = () => {
    const menuIcon = document.querySelector('.header__menu-icon');
    const menuBody = document.querySelector('.menu__body');

    if (menuIcon.classList.contains('_active')) {
        menuIcon.classList.remove('_active');
        menuBody.classList.remove('_active');
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (modal);

/***/ })
/******/ 	]);
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_functions_burger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _modules_functions_appHeight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _modules_functions_moveElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
/* harmony import */ var _modules_functions_lazy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var _modules_form_select_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(5);
/* harmony import */ var _modules_page_modal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(6);

(0,_modules_functions_burger_js__WEBPACK_IMPORTED_MODULE_0__["default"])();


(0,_modules_functions_appHeight_js__WEBPACK_IMPORTED_MODULE_1__["default"])();


(0,_modules_functions_moveElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])();


(0,_modules_functions_lazy_js__WEBPACK_IMPORTED_MODULE_3__["default"])();


(0,_modules_form_select_js__WEBPACK_IMPORTED_MODULE_4__["default"])();





const stepChange = (btn) => {
    const quote = btn.closest('.quote');
    quote.classList.add('step2');
}

const uploadFile = (file) => {
    const input = file.querySelector('input');
    const name = file.querySelector('span');

    input.click();
    input.addEventListener('change', () => {
        name.innerHTML = input.files[0].name;
    });
}

const backToFirstStep = (btn) => {
    const quote = btn.nextElementSibling;

    if (quote && quote.classList.contains('step2')) {
        setTimeout(() => {
            quote.classList.remove('step2');
        }, 800);
    }
}

const scrollToSection = (link, e) => {
    const href = link.getAttribute('href').split('#')[1];
    const target = href != '' ? document.querySelector(`#${href}`) : null;


    if (target) {
        e.preventDefault();
        (0,_modules_functions_burger_js__WEBPACK_IMPORTED_MODULE_0__.burgerClose)();

        target.scrollIntoView({
            behavior: 'smooth'
        });
    }
}

const moveCaseInfo = (item) => {
    const info = item.querySelector('.case__content');
    const infoClone = info.cloneNode(true);
    const modalCase = document.querySelector('#case .case');

    const modalCaseContent = modalCase.querySelector('.case__content');

    if (modalCaseContent) {
        modalCaseContent.remove();
    }

    modalCase.prepend(infoClone);
}




window.addEventListener('resize', () => {
    ;(0,_modules_functions_appHeight_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
});

document.addEventListener('click', (e) => {
    const select = e.target.closest('.select');
    if (!select) {
        (0,_modules_form_select_js__WEBPACK_IMPORTED_MODULE_4__.selectClose)();
    }

    const quoteBtn = e.target.closest('.quote__btn');
    if (quoteBtn) {
        stepChange(quoteBtn);
    }

    const file = e.target.closest('.quote__file');
    if (file) {
        uploadFile(file);
    }

    const quoteModalCloseBtn = e.target.closest('.modal__close');
    if (quoteModalCloseBtn) {
        backToFirstStep(quoteModalCloseBtn);
    }

    const menuLink = e.target.closest('.menu__link');
    if (menuLink) {
        scrollToSection(menuLink, e);
    }

    const casesItem = e.target.closest('.cases__item');
    if (casesItem) {
        moveCaseInfo(casesItem);
    }

    const modalBtn = e.target.closest('[data-modal]');
    if (modalBtn) {
        (0,_modules_page_modal_js__WEBPACK_IMPORTED_MODULE_5__["default"])(modalBtn, e);
    }

    const modalCloseBtn = e.target.closest('.modal__close');
    if (modalCloseBtn) {
        (0,_modules_page_modal_js__WEBPACK_IMPORTED_MODULE_5__.modalClose)();
    }

    const modalContent = e.target.closest('.modal__content');
    const modalWrapper = e.target.closest('.modal__wrapper');
    if (modalWrapper && !modalContent) {
        (0,_modules_page_modal_js__WEBPACK_IMPORTED_MODULE_5__.modalClose)();
    }
});

document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
        (0,_modules_functions_burger_js__WEBPACK_IMPORTED_MODULE_0__.burgerClose)();
        (0,_modules_form_select_js__WEBPACK_IMPORTED_MODULE_4__.selectClose)();
        (0,_modules_page_modal_js__WEBPACK_IMPORTED_MODULE_5__.modalClose)();
    }
});

})();

/******/ })()
;